@model Sitio.Models.Administrador

@*Necesarios para utilizar la Session*@
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor Accessor
@using Sitio.Utility; @* Codigo para facilitar seleccion de Layout para Views *@


@{
    ViewBag.Title = "Modificar Administrador";

    var UsuarioLogueado = Accessor.HttpContext.Session.GetObjectFromJson<Usuario>("UsuarioLog");

    Layout = LayoutForViewHelper.GetLayoutForView(UsuarioLogueado);
}

<div class="row mb-3">
    <div class="col-6">
        <h2 class="font-weight-bold">Modificar Administrador</h2>
    </div>

</div>


@if (!string.IsNullOrEmpty(@ViewBag.Mensaje))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Mensaje
    </div>
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />

@*        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioID, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UsuarioID, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioID, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UsuarioID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.UsuarioID)
            </div>
        </div>

        @* Si el usuario logueado es el que quiero modificar *@
        @if (Model.UsuarioID == UsuarioLogueado.UsuarioID)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
               
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2 font-weight-bold">Confirmar contraseña</label>

                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmContra, new { htmlAttributes = new { @class = "form-control", type = "password"} })
                </div>
            </div>
        }
        @* Si no lo es *@
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                <div class="col-md-10">
                      <p class="text-danger">Solo el administrador autenticado que coincide con el administrador a modificar tiene permiso para cambiar la contraseña.</p>
                      @Html.HiddenFor(model => model.Contraseña)
                      @Html.HiddenFor(model => model.ConfirmContra)
                  </div>
            </div>
        }

         <div class="form-group">
            @Html.LabelFor(model => model.MailAsignado.Correo, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.MailAsignado.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.MailAsignado.Correo)
            </div>
        </div>


        @*Prueba ---------------------------------------------------------------------------------*@
@*        <div class="form-group">
            @Html.Label(null ,"Correos disponibles", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MailAsignado.Correo, (SelectList)ViewBag.CorreosDisp)

            </div>
        </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.NumeroFuncionario, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })*@

            <label class="control-label col-md-2 font-weight-bold">Numero de funcionario</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroFuncionario, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cargo, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <hr /> @*SEPARADOR ============================================================================================= *@

        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-10 text-center">
                <input type="submit" value="Modificar" class="btn btn-success" />
            </div>
        </div>

    </div>
}



<script src="~/js/estandar.js"></script>

