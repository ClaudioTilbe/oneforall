@model Sitio.Models.Operador

@*Necesarios para utilizar la Session*@
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor Accessor
@using Sitio.Utility; @* Codigo para facilitar seleccion de Layout para Views *@

@{
    ViewBag.Title = "Eliminar Operador";

    var UsuarioLogueado = Accessor.HttpContext.Session.GetObjectFromJson<Usuario>("UsuarioLog");

    Layout = LayoutForViewHelper.GetLayoutForView(UsuarioLogueado);

    string contraseñaOculta = new string('*', Model.Contraseña.Length);
}



<h2 class="font-weight-bold mb-4">Eliminar Operador</h2>



<hr /> @*Separador ============================================================================================*@

@if (!string.IsNullOrEmpty(@ViewBag.Mensaje))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Mensaje
    </div>
}


<div>


    <div class="row mt-4">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @Html.DisplayNameFor(model => model.UsuarioID):
        </div>

        <div class="col-12 col-md-3">
            @Html.DisplayFor(model => model.UsuarioID)
        </div>

    </div>

    <div class="row mt-2">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @Html.DisplayNameFor(model => model.Contraseña):
        </div>

        <div class="col-12 col-md-3">
            @contraseñaOculta
            @* @Html.DisplayFor(model => model.Contraseña) *@
        </div>

    </div>

    <div class="row mt-2">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @Html.DisplayNameFor(model => model.MailAsignado.Correo):
        </div>

        <div class="col-12 col-md-3">
            @Html.DisplayFor(model => model.MailAsignado.Correo)
        </div>

    </div>

    <div class="row mt-2">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @* @Html.DisplayNameFor(model => model.NombreSupervisor):*@
            Nombre de supervisor:
        </div>

        <div class="col-12 col-md-3">
            @Html.DisplayFor(model => model.NombreSupervisor)
        </div>

    </div>

    <div class="row mt-2">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @*@Html.DisplayNameFor(model => model.NumeroFuncionarioSupervisor):*@
            Numero funcionario se supervisor:
        </div>

        <div class="col-12 col-md-3">
            @Html.DisplayFor(model => model.NumeroFuncionarioSupervisor)
        </div>

    </div>

    <div class="row mt-2">

        <div class="col-12 col-md-3 font-weight-bold mb-1 mb-md-0">
            @*@Html.DisplayNameFor(model => model.SucursalesAsignadas):*@
            Sucursales asignadas:
        </div>

        <div class="col-12 col-md-3">
            @foreach (var item in Model.SucursalesAsignadas)
            {
                @*<li>@Html.DisplayFor(modelItem => item)</li>*@
                <div>
                    <b>-</b> <span>@item.NroSucursal</span>
                    <span>@item.Calle</span>
                </div>
            }
        </div>

    </div>



    <hr /> @*SEPARADOR ============================================================================================= *@

    <div class="alert alert-danger mt-3 mb-3">
        Esta seguro de que desea eliminar este Usuario Operador?
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-10 text-center">
                <input type="submit" value="Eliminar" class="btn btn-danger" />
            </div>
        </div>
    }

</div>



<script src="~/js/estandar.js"></script>
